# Project-wide Gradle settings.
# IDE (e.g. Android Studio) users:
# Gradle settings configured through the IDE *will override*
# any settings specified in this file.
# For more details on how to configure your build environment visit
# http://www.gradle.org/docs/current/userguide/build_environment.html
# Specifies the JVM arguments used for the daemon process.
# The setting is particularly useful for tweaking memory settings.
org.gradle.jvmargs=-Xmx2048m -Dfile.encoding=UTF-8
# When configured, Gradle will run in incubating parallel mode.
# This option should only be used with decoupled projects. More details, visit
# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects
# org.gradle.parallel=true
# AndroidX package structure to make it clearer which packages are bundled with the
# Android operating system, and which are packaged with your app"s APK
# https://developer.android.com/topic/libraries/support-library/androidx-rn
android.useAndroidX=true
# Automatically convert third-party libraries to use AndroidX
android.enableJetifier=true
# Kotlin code style for this project: "official" or "obsolete":
kotlin.code.style=official

# >----- 请勿在这里改属性值，不然会直接push到GitHub，请看PluginSwitch类注释 -----<
# >----- 可以在local.properties去设置相同属性，来调试插件 -----<

# buildSrc的日志
buildSrc.openLog=true

# aar编译，默认关闭
# 在local.properties中添加属性 run.openAarRun=true 打开aarrun功能
# sync now一次，再执行 ./gradlew assembleDebugForAar 生成所有aar
# 在local.properties中添加属性 run.projects=app 即可体验aarrun
# projects使用： projects=app,other-module 或者 projects=all 依赖所有
run.openAarRun=false

# 等待zf加注释
# 🌰可见上面的run.openAarRun
# 默认关闭，可以在local.properties里面去设置hotfix.open=true来打开
hotfix.open=false

# 动态配置项目
# 只构建修改过的模块
dynamic_build=false